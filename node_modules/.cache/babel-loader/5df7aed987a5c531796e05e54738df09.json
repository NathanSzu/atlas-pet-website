{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web Coding\\\\atlas-pet-website\\\\src\\\\pages\\\\Careers.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Background from '../components/Background';\nimport \"./style.css\";\nimport jobData from \"../utils/JobListings\";\nimport JobCard from '../components/CardJob';\nimport FormSignup from '../components/FormSignup';\nimport FormLogin from '../components/FormLogin.js';\nimport { AuthContext } from '../utils/AuthContext';\nimport { Redirect } from 'react-router-dom';\nexport default function Careers() {\n  let currentPositions = [];\n  let currentPositionsBlaine = [];\n  let currentPositionsStillwater = [];\n  const [signup, setSignup] = useState(true);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    for (let i = 0; i < jobData.alljobs.length; i++) {\n      if (jobData.alljobs[i].available === true) {\n        currentPositions.push(jobData.alljobs[i]);\n\n        if (jobData.alljobs[i].location === \"Blaine\") {\n          currentPositionsBlaine.push(jobData.alljobs[i]);\n        } else if (jobData.alljobs[i].location === \"Stillwater\") {\n          currentPositionsStillwater.push(jobData.alljobs[i]);\n        }\n      }\n    }\n\n    setJobState({\n      all: currentPositions,\n      Blaine: currentPositionsBlaine,\n      Stillwater: currentPositionsStillwater\n    });\n    setJobs(currentPositions);\n  }, []);\n  const [jobState, setJobState] = useState({\n    all: [],\n    Blaine: [],\n    Stillwater: []\n  });\n\n  const toggleForm = () => {\n    if (signup === true) {\n      setSignup(false);\n    } else {\n      setSignup(true);\n    }\n  };\n\n  const [jobs, setJobs] = useState([]);\n\n  const handleLocationChange = e => {\n    if (e.target.value === \"Blaine\") {\n      setJobs(jobState.Blaine);\n    } else if (e.target.value === \"Stillwater\") {\n      setJobs(jobState.Stillwater);\n    } else {\n      setJobs(jobState.all);\n    }\n  };\n\n  return currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"User-Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(\"main\", {\n    className: \"hide-overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 job-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-section-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-center job-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Available Positions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light btn-filter\",\n    onClick: handleLocationChange,\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"All Locations\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light btn-filter\",\n    onClick: handleLocationChange,\n    value: \"Blaine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Blaine\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light btn-filter\",\n    onClick: handleLocationChange,\n    value: \"Stillwater\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Stillwater\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, jobs.map(job => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    key: job.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(JobCard, {\n    job: job,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, signup ? /*#__PURE__*/React.createElement(FormSignup, {\n    toggleForm: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(FormLogin, {\n    toggleForm: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 74\n    }\n  }))));\n}","map":{"version":3,"sources":["G:/Web Coding/atlas-pet-website/src/pages/Careers.js"],"names":["React","useState","useEffect","useContext","Background","jobData","JobCard","FormSignup","FormLogin","AuthContext","Redirect","Careers","currentPositions","currentPositionsBlaine","currentPositionsStillwater","signup","setSignup","currentUser","i","alljobs","length","available","push","location","setJobState","all","Blaine","Stillwater","setJobs","jobState","toggleForm","jobs","handleLocationChange","e","target","value","map","job","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,sBAAsB,GAAG,EAA7B;AACA,MAAIC,0BAA0B,GAAG,EAAjC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAkBd,UAAU,CAACM,WAAD,CAAlC;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACc,OAAR,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;AAC7C,UAAIb,OAAO,CAACc,OAAR,CAAgBD,CAAhB,EAAmBG,SAAnB,KAAiC,IAArC,EAA2C;AACvCT,QAAAA,gBAAgB,CAACU,IAAjB,CAAsBjB,OAAO,CAACc,OAAR,CAAgBD,CAAhB,CAAtB;;AACA,YAAIb,OAAO,CAACc,OAAR,CAAgBD,CAAhB,EAAmBK,QAAnB,KAAgC,QAApC,EAA8C;AAC1CV,UAAAA,sBAAsB,CAACS,IAAvB,CAA4BjB,OAAO,CAACc,OAAR,CAAgBD,CAAhB,CAA5B;AACH,SAFD,MAEO,IAAIb,OAAO,CAACc,OAAR,CAAgBD,CAAhB,EAAmBK,QAAnB,KAAgC,YAApC,EAAkD;AACrDT,UAAAA,0BAA0B,CAACQ,IAA3B,CAAgCjB,OAAO,CAACc,OAAR,CAAgBD,CAAhB,CAAhC;AACH;AACJ;AACJ;;AACDM,IAAAA,WAAW,CAAC;AACRC,MAAAA,GAAG,EAAEb,gBADG;AAERc,MAAAA,MAAM,EAAEb,sBAFA;AAGRc,MAAAA,UAAU,EAAEb;AAHJ,KAAD,CAAX;AAKAc,IAAAA,OAAO,CAAChB,gBAAD,CAAP;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAM,CAACiB,QAAD,EAAWL,WAAX,IAA0BvB,QAAQ,CAAC;AACrCwB,IAAAA,GAAG,EAAE,EADgC;AAErCC,IAAAA,MAAM,EAAE,EAF6B;AAGrCC,IAAAA,UAAU,EAAE;AAHyB,GAAD,CAAxC;;AAMA,QAAMG,UAAU,GAAG,MAAM;AACrB,QAAIf,MAAM,KAAK,IAAf,EAAqB;AACjBC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAND;;AAQA,QAAM,CAACe,IAAD,EAAOH,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAM+B,oBAAoB,GAAIC,CAAD,IAAO;AAChC,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,QAAvB,EAAiC;AAC7BP,MAAAA,OAAO,CAACC,QAAQ,CAACH,MAAV,CAAP;AACH,KAFD,MAEO,IAAIO,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,YAAvB,EAAqC;AACxCP,MAAAA,OAAO,CAACC,QAAQ,CAACF,UAAV,CAAP;AACH,KAFM,MAEA;AACHC,MAAAA,OAAO,CAACC,QAAQ,CAACJ,GAAV,CAAP;AACH;AACJ,GARD;;AAUA,SAAQR,WAAW,gBAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACf;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAA2D,IAAA,OAAO,EAAEe,oBAApE;AAA0F,IAAA,KAAK,EAAC,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAA2D,IAAA,OAAO,EAAEA,oBAApE;AAA0F,IAAA,KAAK,EAAC,QAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAA2D,IAAA,OAAO,EAAEA,oBAApE;AAA0F,IAAA,KAAK,EAAC,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CAJJ,CAHJ,eAcI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACK,GAAL,CAAUC,GAAD,iBACN;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AACI,IAAA,GAAG,EAAED,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,CADL,CAdJ,CADJ,eA0BI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMtB,MAAD,gBAAW,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEe,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,gBAAoD,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEA,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzD,CA1BJ,CAFJ,CADJ;AAoCH","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Background from '../components/Background';\r\nimport \"./style.css\";\r\nimport jobData from \"../utils/JobListings\";\r\nimport JobCard from '../components/CardJob';\r\nimport FormSignup from '../components/FormSignup';\r\nimport FormLogin from '../components/FormLogin.js';\r\nimport { AuthContext } from '../utils/AuthContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Careers() {\r\n    let currentPositions = [];\r\n    let currentPositionsBlaine = [];\r\n    let currentPositionsStillwater = [];\r\n    const [signup, setSignup] = useState(true)\r\n    const { currentUser } = useContext(AuthContext);\r\n   \r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < jobData.alljobs.length; i++) {\r\n            if (jobData.alljobs[i].available === true) {\r\n                currentPositions.push(jobData.alljobs[i])\r\n                if (jobData.alljobs[i].location === \"Blaine\") {\r\n                    currentPositionsBlaine.push(jobData.alljobs[i])\r\n                } else if (jobData.alljobs[i].location === \"Stillwater\") {\r\n                    currentPositionsStillwater.push(jobData.alljobs[i])\r\n                }\r\n            }\r\n        }\r\n        setJobState({\r\n            all: currentPositions,\r\n            Blaine: currentPositionsBlaine,\r\n            Stillwater: currentPositionsStillwater\r\n        })\r\n        setJobs(currentPositions)\r\n    }, [])\r\n\r\n    const [jobState, setJobState] = useState({\r\n        all: [],\r\n        Blaine: [],\r\n        Stillwater: []\r\n    })\r\n\r\n    const toggleForm = () => {\r\n        if (signup === true) {\r\n            setSignup(false)\r\n        } else {\r\n            setSignup(true)\r\n        }\r\n    }\r\n\r\n    const [jobs, setJobs] = useState([])\r\n\r\n    const handleLocationChange = (e) => {\r\n        if (e.target.value === \"Blaine\") {\r\n            setJobs(jobState.Blaine)\r\n        } else if (e.target.value === \"Stillwater\") {\r\n            setJobs(jobState.Stillwater)\r\n        } else {\r\n            setJobs(jobState.all)\r\n        }\r\n    }\r\n\r\n    return (currentUser ? <Redirect to=\"User-Page\" /> :\r\n        <main className=\"hide-overflow\">\r\n            <Background />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 job-section\">\r\n                    <div className=\"job-section-overlay\"></div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center job-header\">\r\n                            <h1 className=\"section-title\">Available Positions</h1>\r\n                        </div>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <button type=\"button\" className=\"btn btn-light btn-filter\" onClick={handleLocationChange} value=\"all\">All Locations</button>\r\n                            <button type=\"button\" className=\"btn btn-light btn-filter\" onClick={handleLocationChange} value=\"Blaine\">Blaine</button>\r\n                            <button type=\"button\" className=\"btn btn-light btn-filter\" onClick={handleLocationChange} value=\"Stillwater\">Stillwater</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        {jobs.map((job) => (\r\n                            <div className=\"col-lg-6\" key={job.id}>\r\n                            <JobCard\r\n                                job={job}\r\n                            />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-wrapper\">\r\n                    {(signup) ? <FormSignup toggleForm={toggleForm} /> : <FormLogin toggleForm={toggleForm} />}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}