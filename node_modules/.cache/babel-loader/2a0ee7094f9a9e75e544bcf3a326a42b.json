{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web Coding\\\\atlas-pet-website\\\\src\\\\components\\\\FormSignup\\\\index.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from 'react-router';\nimport fbApp from '../../utils/firebase';\nimport \"./formSignup.css\";\n\nfunction FormSignup({\n  toggleForm,\n  history\n}) {\n  // const firestore = fbApp.firestore();\n  // const auth = fbApp.auth();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    name: \"\",\n    phone: \"\",\n    password: \"\",\n    retypePassword: \"\"\n  }); // Function to sign up user via firebase.\n\n  const handleSignUp = async event => {\n    const {\n      password,\n      retypePassword,\n      email\n    } = formData;\n\n    if (password !== retypePassword || email === \"\") {}\n\n    event.preventDefault();\n\n    try {\n      await fbApp.auth().createUserWithEmailAndPassword(formData.email, formData.password);\n      history.push('/User-Page');\n    } catch (error) {\n      console.log('Signup Form Error: ', error);\n    }\n  };\n\n  function handleEmailChange(e) {\n    setFormData({ ...formData,\n      email: e.target.value\n    });\n  }\n\n  ;\n\n  function handlePasswordChange(e) {\n    setFormData({ ...formData,\n      password: e.target.value\n    });\n  }\n\n  ;\n\n  function handleRetypePasswordChange(e) {\n    setFormData({ ...formData,\n      retypePassword: e.target.value\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron form-spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 main-txt signup-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 65\n    }\n  }, \"Signup\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead main-txt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Create an account and apply today!\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleEmailChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: formData.password.length < 8 && formData.password.length > 0 ? \"no-match\" : \"d-none\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Must be at least 8 characters!\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handlePasswordChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Retype Password\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: formData.password !== formData.retypePassword && formData.retypePassword.length > 0 ? \"no-match\" : \"d-none\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Passwords must match!\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"password\",\n    id: \"retype-password\",\n    name: \"retype-password\",\n    onChange: handleRetypePasswordChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn btn-submit\",\n    type: \"submit\",\n    onClick: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead signup-login-txt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"text-button\",\n    type: \"button\",\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 79\n    }\n  }, \"Login Here\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withRouter(FormSignup);","map":{"version":3,"sources":["G:/Web Coding/atlas-pet-website/src/components/FormSignup/index.js"],"names":["React","useState","withRouter","fbApp","FormSignup","toggleForm","history","formData","setFormData","email","name","phone","password","retypePassword","handleSignUp","event","preventDefault","auth","createUserWithEmailAndPassword","push","error","console","log","handleEmailChange","e","target","value","handlePasswordChange","handleRetypePasswordChange","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from 'react-router';\r\nimport fbApp from '../../utils/firebase';\r\nimport \"./formSignup.css\";\r\n\r\nfunction FormSignup({ toggleForm, history }) {\r\n\r\n    // const firestore = fbApp.firestore();\r\n    // const auth = fbApp.auth();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        retypePassword: \"\"\r\n    });\r\n\r\n    // Function to sign up user via firebase.\r\n    const handleSignUp =\r\n        async event => {\r\n            const { password, retypePassword, email } = formData\r\n            if (password !== retypePassword || email === \"\") {\r\n\r\n            }\r\n\r\n            event.preventDefault();\r\n            try {\r\n                await fbApp\r\n                    .auth()\r\n                    .createUserWithEmailAndPassword(formData.email, formData.password);\r\n\r\n                history.push('/User-Page');\r\n            }\r\n            catch (error) {\r\n                console.log('Signup Form Error: ', error);\r\n            }\r\n        };\r\n\r\n    function handleEmailChange(e) {\r\n        setFormData({ ...formData, email: e.target.value })\r\n    };\r\n\r\n    function handlePasswordChange(e) {\r\n        setFormData({ ...formData, password: e.target.value })\r\n    };\r\n\r\n    function handleRetypePasswordChange(e) {\r\n        setFormData({ ...formData, retypePassword: e.target.value })\r\n    };\r\n\r\n    return (\r\n        <div className=\"jumbotron form-spacing\">\r\n            <form className=\"form\">\r\n                <h1 className=\"display-4 main-txt signup-login\"><strong>Signup</strong></h1>\r\n                <p className=\"lead main-txt\">Create an account and apply today!</p>\r\n\r\n                {/* Email input */}\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    className=\"inputs\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleEmailChange}\r\n                    required\r\n                ></input>\r\n\r\n                {/* Password input */}\r\n                <div className=\"position-relative\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <label className={formData.password.length < 8 && formData.password.length > 0 ? \"no-match\" : \"d-none\"} htmlFor=\"password\">Must be at least 8 characters!</label>\r\n                </div>\r\n                <input\r\n                    className=\"inputs\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handlePasswordChange}\r\n                    required\r\n                ></input>\r\n\r\n                {/* Password Confirmation input */}\r\n                <div className=\"position-relative\">\r\n                    <label htmlFor=\"password\">Retype Password</label>\r\n                    <label className={formData.password !== formData.retypePassword && formData.retypePassword.length > 0 ? \"no-match\" : \"d-none\"} htmlFor=\"password\">Passwords must match!</label>\r\n                </div>\r\n                <input\r\n                    className=\"inputs\"\r\n                    type=\"password\"\r\n                    id=\"retype-password\"\r\n                    name=\"retype-password\"\r\n                    onChange={handleRetypePasswordChange}\r\n                    required\r\n                ></input>\r\n\r\n                {/* Submit button */}\r\n                <button\r\n                    className=\"submit-btn btn-submit\"\r\n                    type=\"submit\"\r\n                    onClick={handleSignUp}\r\n                >Submit</button>\r\n                <p className=\"lead signup-login-txt\">Already have an account? <button className=\"text-button\" type=\"button\" onClick={toggleForm}>\r\n                    Login Here\r\n                    </button>\r\n                </p>\r\n            </form>\r\n            <div className=\"row-overlay\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(FormSignup);"]},"metadata":{},"sourceType":"module"}